{
  "status": "SUCCESS",
  "data": [
    {
      "id": 71,
      "name": "基础教程",
      "name_en": "baseUsage",
      "product_id": 7,
      "parent_id": 61,
      "rank": "0",
      "gmt_create": "2020-04-12T05:52:31.000Z",
      "gmt_modified": "2020-04-26T02:45:48.000Z",
      "is_deleted": 0,
      "is_avaliable": 1,
      "is_alinw": 0,
      "type": "normal",
      "externalPath": null,
      "creator_userid": 2,
      "updator_userid": 2,
      "children": [
        {
          "id": 98,
          "category_id": 71,
          "name": "快速开始",
          "identifier": null,
          "rank": 0,
          "exampleCount": 3,
          "example": [
            {
              "id": 302,
              "name": "bizcharts快速开始demo",
              "rank": 0,
              "pages": "98",
              "page_id": 98,
              "product_id": 7,
              "in_gallery": 0,
              "description": "bizcharts@4快速开始demo",
              "javascript": "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Chart, Interval } from 'bizcharts';\n\n// 数据源\nconst data = [\n  { genre: 'Sports', sold: 275 },\n  { genre: 'Strategy', sold: 155 },\n  { genre: 'Action', sold: 230 },\n  { genre: 'Shooter', sold: 250 },\n  { genre: 'Other', sold: 450 }\n];\n\n// 图表必须由Chart组件包裹\n// 图形组件Interval 按照数据坐标 genre*sold 分布，为必填属性。\n// 图形颜色根据\"genre\"分类显示，颜色是可选属性。\n \nReactDOM.render((\n  <Chart height={320} autoFit data={data} >\n    <Interval position=\"genre*sold\" />\n  </Chart>\n), mountNode);\n\n \n",
              "css": null,
              "is_deleted": 0,
              "gmt_create": "2020-04-12T08:49:28.000Z",
              "gmt_modified": "2020-08-06T02:24:35.000Z",
              "compiled_js": null,
              "tag": "3",
              "shot": "http://bizcharts-resource.oss-cn-zhangjiakou.aliyuncs.com/images/04427140-d302-11ea-9dee-c72a06f9a05d.png",
              "creator_userid": 2,
              "updator_userid": 2,
              "product": {
                "id": 7,
                "product_name": "BizCharts@4.x",
                "identifier": "BizCharts4",
                "is_alinw": 0,
                "is_searchable": 1,
                "is_deleted": 0,
                "gmt_create": "2020-04-07T08:49:30.000Z",
                "gmt_modified": "2020-05-12T06:19:13.000Z",
                "creator_userid": 2,
                "updator_userid": 11,
                "is_avaliable": 1
              }
            },
            {
              "id": 352,
              "name": "多色折线图（BizCharts@4）",
              "rank": 0,
              "pages": "83,98",
              "page_id": 83,
              "product_id": 7,
              "in_gallery": 1,
              "description": null,
              "javascript": "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Chart, Line, Point, Tooltip, Legend } from 'bizcharts';\n\n// 数据源\nconst data = [\n\t{\n\t\tmonth: \"Jan\",\n\t\tcity: \"Tokyo\",\n\t\ttemperature: 7\n\t},\n\t{\n\t\tmonth: \"Jan\",\n\t\tcity: \"London\",\n\t\ttemperature: 3.9\n\t},\n\t{\n\t\tmonth: \"Feb\",\n\t\tcity: \"Tokyo\",\n\t\ttemperature: 6.9\n\t},\n\t{\n\t\tmonth: \"Feb\",\n\t\tcity: \"London\",\n\t\ttemperature: 4.2\n\t},\n\t{\n\t\tmonth: \"Mar\",\n\t\tcity: \"Tokyo\",\n\t\ttemperature: 9.5\n\t},\n\t{\n\t\tmonth: \"Mar\",\n\t\tcity: \"London\",\n\t\ttemperature: 5.7\n\t},\n\t{\n\t\tmonth: \"Apr\",\n\t\tcity: \"Tokyo\",\n\t\ttemperature: 14.5\n\t},\n\t{\n\t\tmonth: \"Apr\",\n\t\tcity: \"London\",\n\t\ttemperature: 8.5\n\t},\n\t{\n\t\tmonth: \"May\",\n\t\tcity: \"Tokyo\",\n\t\ttemperature: 18.4\n\t},\n\t{\n\t\tmonth: \"May\",\n\t\tcity: \"London\",\n\t\ttemperature: 11.9\n\t},\n\t{\n\t\tmonth: \"Jun\",\n\t\tcity: \"Tokyo\",\n\t\ttemperature: 21.5\n\t},\n\t{\n\t\tmonth: \"Jun\",\n\t\tcity: \"London\",\n\t\ttemperature: 15.2\n\t},\n\t{\n\t\tmonth: \"Jul\",\n\t\tcity: \"Tokyo\",\n\t\ttemperature: 25.2\n\t},\n\t{\n\t\tmonth: \"Jul\",\n\t\tcity: \"London\",\n\t\ttemperature: 17\n\t},\n\t{\n\t\tmonth: \"Aug\",\n\t\tcity: \"Tokyo\",\n\t\ttemperature: 26.5\n\t},\n\t{\n\t\tmonth: \"Aug\",\n\t\tcity: \"London\",\n\t\ttemperature: 16.6\n\t},\n\t{\n\t\tmonth: \"Sep\",\n\t\tcity: \"Tokyo\",\n\t\ttemperature: 23.3\n\t},\n\t{\n\t\tmonth: \"Sep\",\n\t\tcity: \"London\",\n\t\ttemperature: 14.2\n\t},\n\t{\n\t\tmonth: \"Oct\",\n\t\tcity: \"Tokyo\",\n\t\ttemperature: 18.3\n\t},\n\t{\n\t\tmonth: \"Oct\",\n\t\tcity: \"London\",\n\t\ttemperature: 10.3\n\t},\n\t{\n\t\tmonth: \"Nov\",\n\t\tcity: \"Tokyo\",\n\t\ttemperature: 13.9\n\t},\n\t{\n\t\tmonth: \"Nov\",\n\t\tcity: \"London\",\n\t\ttemperature: 6.6\n\t},\n\t{\n\t\tmonth: \"Dec\",\n\t\tcity: \"Tokyo\",\n\t\ttemperature: 9.6\n\t},\n\t{\n\t\tmonth: \"Dec\",\n\t\tcity: \"London\",\n\t\ttemperature: 4.8\n\t}\n];\n\nconst scale = {\n\ttemperature: { min: 0 },\n\tcity: {\n\t\tformatter: v => {\n\t\t\treturn {\n\t\t\t\tLondon: '伦敦',\n\t\t\t\tTokyo: '东京'\n\t\t\t}[v]\n\t\t}\n\t}\n}\n\nfunction Demo() {\n\treturn <Chart scale={scale} padding={[30, 20, 60, 40]} autoFit height={320} data={data} interactions={['element-active']}>\n\t\t<Point position=\"month*temperature\" color=\"city\" shape='circle' />\n\t\t<Line shape=\"smooth\" position=\"month*temperature\" color=\"city\" label=\"temperature\" />\n\t\t<Tooltip shared showCrosshairs region={null} g2-tooltip-list-item={{display:'flex'}}/>\n\t\t<Legend background={{\n\t\t\tpadding:[5,100,5,36],\n\t\t\tstyle: {\n\t\t\t\tfill: '#eaeaea',\n\t\t\t\tstroke: '#fff'\n\t\t\t}\n\t\t}} />\n\t</Chart>\n}\n\n\n\nReactDOM.render(<Demo />, mountNode);\n\n\n",
              "css": null,
              "is_deleted": 0,
              "gmt_create": "2020-04-26T16:55:40.000Z",
              "gmt_modified": "2022-01-04T02:48:31.000Z",
              "compiled_js": null,
              "tag": "2",
              "shot": "http://bizcharts-resource.oss-cn-zhangjiakou.aliyuncs.com/images/cd7b0440-6d08-11ec-8391-a5e596d2849a.png",
              "creator_userid": 2,
              "updator_userid": 11,
              "product": {
                "id": 7,
                "product_name": "BizCharts@4.x",
                "identifier": "BizCharts4",
                "is_alinw": 0,
                "is_searchable": 1,
                "is_deleted": 0,
                "gmt_create": "2020-04-07T08:49:30.000Z",
                "gmt_modified": "2020-05-12T06:19:13.000Z",
                "creator_userid": 2,
                "updator_userid": 11,
                "is_avaliable": 1
              }
            },
            {
              "id": 482,
              "name": "极简Demo",
              "rank": 0,
              "pages": "98",
              "page_id": 98,
              "product_id": 7,
              "in_gallery": 1,
              "description": "Demo详情 https://bizcharts.net/product/BizCharts@4.x/demo/482",
              "javascript": "\nimport { Chart, Interval, Tooltip, Line, Axis, Coordinate, Point, Legend } from 'bizcharts';\n\n\nconst data = [\n\t{ year: '1951 年', sales: 38 },\n\t{ year: '1952 年', sales: 52 },\n\t{ year: '1956 年', sales: 61 },\n\t{ year: '1957 年', sales: 45 },\n\t{ year: '1958 年', sales: 48 },\n\t{ year: '1959 年', sales: 38 },\n\t{ year: '1960 年', sales: 38 },\n\t{ year: '1962 年', sales: 38 },\n];\nconst scale = {\n\tsales: {\n\t\tmin: 0\n\t}\n}\n\nconst multiLineData = [\n\t{\n\t\tmonth: \"Jan\",\n\t\tcity: \"Tokyo\",\n\t\ttemperature: 7\n\t},\n\t{\n\t\tmonth: \"Jan\",\n\t\tcity: \"London\",\n\t\ttemperature: 3.9\n\t},\n\t{\n\t\tmonth: \"Feb\",\n\t\tcity: \"Tokyo\",\n\t\ttemperature: 6.9\n\t},\n\t{\n\t\tmonth: \"Feb\",\n\t\tcity: \"London\",\n\t\ttemperature: 4.2\n\t},\n\t{\n\t\tmonth: \"Mar\",\n\t\tcity: \"Tokyo\",\n\t\ttemperature: 9.5\n\t},\n\t{\n\t\tmonth: \"Mar\",\n\t\tcity: \"London\",\n\t\ttemperature: 5.7\n\t},\n\t{\n\t\tmonth: \"Apr\",\n\t\tcity: \"Tokyo\",\n\t\ttemperature: 14.5\n\t},\n\t{\n\t\tmonth: \"Apr\",\n\t\tcity: \"London\",\n\t\ttemperature: 8.5\n\t},\n\t{\n\t\tmonth: \"May\",\n\t\tcity: \"Tokyo\",\n\t\ttemperature: 18.4\n\t},\n\t{\n\t\tmonth: \"May\",\n\t\tcity: \"London\",\n\t\ttemperature: 11.9\n\t},\n\t{\n\t\tmonth: \"Jun\",\n\t\tcity: \"Tokyo\",\n\t\ttemperature: 21.5\n\t},\n\t{\n\t\tmonth: \"Jun\",\n\t\tcity: \"London\",\n\t\ttemperature: 15.2\n\t},\n\t{\n\t\tmonth: \"Jul\",\n\t\tcity: \"Tokyo\",\n\t\ttemperature: 25.2\n\t},\n\t{\n\t\tmonth: \"Jul\",\n\t\tcity: \"London\",\n\t\ttemperature: 17\n\t},\n\t{\n\t\tmonth: \"Aug\",\n\t\tcity: \"Tokyo\",\n\t\ttemperature: 26.5\n\t},\n\t{\n\t\tmonth: \"Aug\",\n\t\tcity: \"London\",\n\t\ttemperature: 16.6\n\t},\n\t{\n\t\tmonth: \"Sep\",\n\t\tcity: \"Tokyo\",\n\t\ttemperature: 23.3\n\t},\n\t{\n\t\tmonth: \"Sep\",\n\t\tcity: \"London\",\n\t\ttemperature: 14.2\n\t},\n\t{\n\t\tmonth: \"Oct\",\n\t\tcity: \"Tokyo\",\n\t\ttemperature: 18.3\n\t},\n\t{\n\t\tmonth: \"Oct\",\n\t\tcity: \"London\",\n\t\ttemperature: 10.3\n\t},\n\t{\n\t\tmonth: \"Nov\",\n\t\tcity: \"Tokyo\",\n\t\ttemperature: 13.9\n\t},\n\t{\n\t\tmonth: \"Nov\",\n\t\tcity: \"London\",\n\t\ttemperature: 6.6\n\t},\n\t{\n\t\tmonth: \"Dec\",\n\t\tcity: \"Tokyo\",\n\t\ttemperature: 9.6\n\t},\n\t{\n\t\tmonth: \"Dec\",\n\t\tcity: \"London\",\n\t\ttemperature: 4.8\n\t}\n];\n\nconst pieData = [\n\t{ item: '事例一', percent: 0.4 },\n\t{ item: '事例二', percent: 0.21 },\n\t{ item: '事例三', percent: 0.17 },\n\t{ item: '事例四', percent: 0.13 },\n\t{ item: '事例五', percent: 0.09 },\n];\n\nconst cols = {\n\tpercent: {\n\t\tformatter: val => {\n\t\t\tval = val * 100 + '%';\n\t\t\treturn val;\n\t\t},\n\t},\n};\n\n// interactions 交互配置 https://bizcharts.net/product/BizCharts4/category/62/page/112#type\n\nfunction Demo() {\n\treturn (\n\t\t<div style= {{ padding: '20px' }\n}>\n\t<h3>柱状图 < /h3>\n\t< Chart height = { 400} scale = { scale } autoFit data = { data } interactions = { ['active-region']} appendPadding = { [20, 0, 0, 0]} >\n\t\t<Interval position=\"year*sales\" color = \"year\" />\n\t\t\t<Tooltip shared />\n\t\t\t</Chart>\n\t\t\t< h3 > 单条折线图 < /h3>\n\t\t\t< Chart height = { 400} scale = { scale } autoFit data = { data } appendPadding = { [20, 0, 0, 0]} >\n\t\t\t\t<Line position=\"year*sales\" shape = \"smooth\" />\n\t\t\t\t\t<Point position=\"year*sales\" />\n\t\t\t\t\t\t<Tooltip showCrosshairs />\n\t\t\t\t\t\t</Chart>\n\t\t\t\t\t\t< h3 > 多条折线图 < /h3>\n\t\t\t\t\t\t< Chart scale = {{ temperature: { min: 0 } }} padding = { [10, 20, 50, 40]} autoFit height = { 500} data = { multiLineData } >\n\t\t\t\t\t\t\t<Line shape=\"smooth\" position = \"month*temperature\" color = \"city\" />\n\t\t\t\t\t\t\t\t<Point position=\"month*temperature\" color = \"city\" />\n\t\t\t\t\t\t\t\t\t<Tooltip shared={ true } showCrosshairs />\n\t\t\t\t\t\t\t\t\t\t<Legend itemName={\n\t{\n\t\tstyle: {\n\t\t\tfill: \"#333\"\n\t\t}\n\t}\n} />\n\t< /Chart>\n\t< h3 > 饼图 < /h3>\n\t< Chart height = { 400} data = { pieData } scale = { cols } autoFit interactions = { ['element-single-selected']} >\n\t\t<Coordinate type=\"theta\" radius = { 0.75} />\n\t\t\t<Tooltip showTitle={ false } />\n\t\t\t\t< Axis visible = { false} />\n\t\t\t\t\t<Interval\n          position=\"percent\"\nadjust = \"stack\"\ncolor = \"item\"\nstyle = {{\n\tlineWidth: 1,\n\t\tstroke: '#fff',\n          }}\nlabel = {\n\t['*', {\n\t\tcontent: (data) => {\n\t\t\treturn `${data.item}: ${data.percent * 100}%`;\n\t\t},\n\t}]}\n\t/>\n\t</Chart>\n\t< /div>\n  )\n}\n\nReactDOM.render(<Demo />, mountNode);",
              "css": null,
              "is_deleted": 0,
              "gmt_create": "2020-07-28T10:53:05.000Z",
              "gmt_modified": "2020-08-06T02:24:35.000Z",
              "compiled_js": null,
              "tag": "2,3,19",
              "shot": "http://bizcharts-resource.oss-cn-zhangjiakou.aliyuncs.com/images/7f7a52d0-d0c1-11ea-b9f5-33045a8270a9.png",
              "creator_userid": 10,
              "updator_userid": 10,
              "product": {
                "id": 7,
                "product_name": "BizCharts@4.x",
                "identifier": "BizCharts4",
                "is_alinw": 0,
                "is_searchable": 1,
                "is_deleted": 0,
                "gmt_create": "2020-04-07T08:49:30.000Z",
                "gmt_modified": "2020-05-12T06:19:13.000Z",
                "creator_userid": 2,
                "updator_userid": 11,
                "is_avaliable": 1
              }
            }
          ],
          "isPage": true
        },
        {
          "id": 357,
          "category_id": 71,
          "name": "数据格式化和重命名",
          "identifier": null,
          "rank": 0,
          "exampleCount": 0,
          "example": [],
          "isPage": true
        },
        {
          "id": 181,
          "category_id": 71,
          "name": "GComponent的使用介绍",
          "identifier": null,
          "rank": 0,
          "exampleCount": 1,
          "example": [
            {
              "id": 463,
              "name": "GComponent使用Demo",
              "rank": 0,
              "pages": "181",
              "page_id": 181,
              "product_id": 7,
              "in_gallery": null,
              "description": null,
              "javascript": "import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GComponents } from \"bizcharts\";\nconst {\n  Canvas,\n  Group,\n  Image,\n  Ellipse,\n  Line,\n  Path,\n  Polygon,\n  Polyline,\n  Marker,\n  Text,\n  Rect,\n} = GComponents;\n\nfunction Demo() {\n  return (\n    <Canvas width={400} height={400} id=\"test\">\n      <Group>\n        <Ellipse\n          attrs={{\n            x: 300,\n            y: 200,\n            rx: 30,\n            ry: 50,\n            fill: \"#1890FF\",\n            stroke: \"#F04864\",\n            lineWidth: 4,\n            radius: 8,\n          }}\n        />\n        <Line\n          attrs={{\n            x1: 200,\n            y1: 100,\n            x2: 400,\n            y2: 100,\n            stroke: \"#1890FF\",\n            lineWidth: 2,\n          }}\n        />\n        <Marker\n          attrs={{\n            r: 30,\n            lineWidth: 2,\n            stroke: \"#F04864\",\n            fill: \"#92323\",\n            x: 80,\n            y: 200,\n            symbol: \"triangle\",\n          }}\n        />\n        <Path\n          attrs={{\n            path: [\n              [\"M\", 100, 100],\n              [\"L\", 200, 200],\n            ],\n            startArrow: {\n              path: \"M 10,0 L -10,-10 L -10,10 Z\",\n              d: 10,\n            },\n            stroke: \"#F04864\",\n          }}\n        />\n        <Polygon\n          attrs={{\n            points: [\n              [200, 100],\n              [400, 100],\n              [\n                400 + 200 * Math.sin(Math.PI / 6),\n                100 + 200 * Math.cos(Math.PI / 6),\n              ],\n              [400, 100 + 200 * Math.cos(Math.PI / 6) * 2],\n              [200, 100 + 200 * Math.cos(Math.PI / 6) * 2],\n              [\n                200 - 200 * Math.sin(Math.PI / 6),\n                100 + 200 * Math.cos(Math.PI / 6),\n              ],\n            ],\n            stroke: \"#1890FF\",\n            lineWidth: 2,\n          }}\n        />\n        <Polyline\n          attrs={{\n            points: [\n              [50, 50],\n              [100, 50],\n              [100, 100],\n              [150, 100],\n              [150, 150],\n              [200, 150],\n              [200, 200],\n              [250, 200],\n              [250, 250],\n              [300, 250],\n              [300, 300],\n              [350, 300],\n              [350, 350],\n              [400, 350],\n              [400, 400],\n              [450, 400],\n            ],\n            lineWidth: 4,\n            stroke: \"#1890FF\",\n          }}\n        />\n        <Text\n          attrs={{\n            x: 200,\n            y: 100,\n            fontFamily: \"PingFang SC\",\n            text: \"This is text\",\n            fontSize: 30,\n            fill: \"#1890FF\",\n            stroke: \"#F04864\",\n          }}\n        />\n        <Rect\n          attrs={{\n            x: 200,\n            y: 300,\n            width: 50,\n            height: 80,\n            fill: \"#1890FF\",\n            stroke: \"#F04864\",\n            lineWidth: 4,\n            radius: 8,\n          }}\n        />\n      </Group>\n    </Canvas>\n  );\n}\n\nReactDOM.render(<Demo />, mountNode);\n",
              "css": null,
              "is_deleted": 0,
              "gmt_create": "2020-06-19T02:51:08.000Z",
              "gmt_modified": "2020-10-21T14:20:45.000Z",
              "compiled_js": null,
              "tag": "44",
              "shot": "http://bizcharts-resource.oss-cn-zhangjiakou.aliyuncs.com/images/9c010c80-13a8-11eb-8f13-61bc40b8cb5c.png",
              "creator_userid": 4,
              "updator_userid": 10,
              "product": {
                "id": 7,
                "product_name": "BizCharts@4.x",
                "identifier": "BizCharts4",
                "is_alinw": 0,
                "is_searchable": 1,
                "is_deleted": 0,
                "gmt_create": "2020-04-07T08:49:30.000Z",
                "gmt_modified": "2020-05-12T06:19:13.000Z",
                "creator_userid": 2,
                "updator_userid": 11,
                "is_avaliable": 1
              }
            }
          ],
          "isPage": true
        },
        {
          "id": 192,
          "category_id": 71,
          "name": "图表事件使用",
          "identifier": null,
          "rank": 0,
          "exampleCount": 0,
          "example": [],
          "isPage": true
        },
        {
          "id": 104,
          "category_id": 71,
          "name": "BizCharts 4.0 升级",
          "identifier": null,
          "rank": 1,
          "exampleCount": 0,
          "example": [],
          "isPage": true
        }
      ]
    },
    {
      "id": 72,
      "name": "开发者教程",
      "name_en": "develpment",
      "product_id": 7,
      "parent_id": 61,
      "rank": "0",
      "gmt_create": "2020-04-12T05:53:22.000Z",
      "gmt_modified": "2020-04-26T02:45:54.000Z",
      "is_deleted": 0,
      "is_avaliable": 1,
      "is_alinw": 0,
      "type": "normal",
      "externalPath": null,
      "creator_userid": 2,
      "updator_userid": 2,
      "children": [
        {
          "id": 106,
          "category_id": 72,
          "name": "自定义图形",
          "identifier": null,
          "rank": 0,
          "exampleCount": 1,
          "example": [
            {
              "id": 314,
              "name": "圆角柱状图(BizCharts@4)",
              "rank": 0,
              "pages": "106",
              "page_id": 106,
              "product_id": 7,
              "in_gallery": 1,
              "description": null,
              "javascript": "import React from \"react\";\nimport {\n  Chart,\n  Tooltip,\n  Interval,\n  Annotation,\n  Axis,\n  registerShape\n} from \"bizcharts\";\n\n\nregisterShape('interval', 'border-radius', {\n  draw(cfg, container) {\n    const { points } = cfg;\n    let path = [];\n    path.push(['M', points[0].x, points[0].y]);\n    path.push(['L', points[1].x, points[1].y]);\n    path.push(['L', points[2].x, points[2].y]);\n    path.push(['L', points[3].x, points[3].y]);\n    path.push('Z');\n    path = this.parsePath(path); // 将 0 - 1 转化为画布坐标\n\n    const group = container.addGroup();\n    group.addShape('rect', {\n      attrs: {\n        x: path[1][1], // 矩形起始点为左上角\n        y: path[1][2],\n        width: path[2][1] - path[1][1],\n        height: path[0][2] - path[1][2],\n        fill: cfg.color,\n        radius: (path[2][1] - path[1][1]) / 2,\n      },\n    });\n\n    return group;\n  },\n});\n\nconst activeData = [\n  { date: '2017年3月2日', actual: 175, expected: 900 },\n  { date: '2017年3月3日', actual: 137, expected: 900 },\n  { date: '2017年3月4日', actual: 240, expected: 900 },\n  { date: '2017年3月5日', actual: 726, expected: 900 },\n  { date: '2017年3月6日', actual: 968, expected: 900 },\n  { date: '2017年3月7日', actual: 702, expected: 900 },\n  { date: '2017年3月8日', actual: 655, expected: 900 },\n  { date: '2017年3月9日', actual: 463, expected: 900 },\n  { date: '2017年3月10日', actual: 464, expected: 900 },\n  { date: '2017年3月12日', actual: 0, expected: 900 },\n  { date: '2017年3月13日', actual: 638, expected: 900 },\n  { date: '2017年3月14日', actual: 0, expected: 900 },\n  { date: '2017年3月15日', actual: 0, expected: 900 },\n  { date: '2017年3月16日', actual: 509, expected: 900 },\n  { date: '2017年3月17日', actual: 269, expected: 900 },\n  { date: '2017年3月18日', actual: 321, expected: 900 },\n  { date: '2017年3月19日', actual: 0, expected: 900 },\n  { date: '2017年3月20日', actual: 399, expected: 900 },\n  { date: '2017年3月21日', actual: 662, expected: 900 },\n  { date: '2017年3月22日', actual: 689, expected: 900 },\n  { date: '2017年3月23日', actual: 347, expected: 900 },\n  { date: '2017年3月24日', actual: 0, expected: 900 },\n  { date: '2017年3月26日', actual: 428, expected: 900 },\n  { date: '2017年3月27日', actual: 749, expected: 900 },\n  { date: '2017年3月28日', actual: 0, expected: 900 },\n  { date: '2017年3月29日', actual: 0, expected: 900 },\n  { date: '2017年3月30日', actual: 69.1, expected: 900 },\n];\n\nfunction Demo() {\n  const scale = {\n    expected: {\n      min: 0,\n      max: 1000,\n      sync: 'value',\n    },\n    actual: {\n      sync: 'value',\n    },\n  };\n  return (\n    <Chart height={400} scale={scale} padding=\"auto\" data={activeData} autoFit>\n      <Interval\n        color=\"#cbcbcb\"\n        shape=\"border-radius\"\n        position=\"date*expected\"\n      />\n      <Interval\n        position=\"date*actual\"\n        color=\"#5B8FF9\"\n        shape={['date*actual', (date, val) => {\n          if (val === 0) {\n            return;\n          }\n          // eslint-disable-next-line consistent-return\n          return 'border-radius';\n        }]}\n      />\n      <Axis name=\"actual\" visible={false} />\n      <Axis name=\"date\" visible={false} />\n      <Axis\n        name=\"expected\"\n        position=\"right\"\n        line={false}\n        tickLine={false}\n        label={{\n          formatter: (val) => {\n            if (val === '1200') {\n              return '';\n            }\n            return val;\n          },\n        }}\n      />\n      <Annotation.Text\n        position={['max', 'max']}\n        offsetY={10}\n        content=\"67 / 900 千卡\"\n        style={{\n          fill: '#cbcbcb',\n          fontSize: 20,\n          textAlign: 'end',\n          textBaseline: 'top',\n        }}\n      />\n      <Annotation.Text\n        position={['min', 'max']}\n        offsetY={10}\n        content=\"活动\"\n        style={{\n          fill: '#5B8FF9',\n          fontSize: 20,\n          fontWeight: 'bold',\n          textBaseline: 'top',\n        }}\n      />\n      <Tooltip shared />\n    </Chart>\n  );\n}\n\nReactDOM.render(<Demo />, mountNode)\n",
              "css": null,
              "is_deleted": 0,
              "gmt_create": "2020-04-19T14:17:16.000Z",
              "gmt_modified": "2020-08-06T02:24:35.000Z",
              "compiled_js": null,
              "tag": "3,78,80,79",
              "shot": "http://bizcharts-resource.oss-cn-zhangjiakou.aliyuncs.com/images/d43ea040-bf7e-11ea-95ad-696ab6ed1a1c.png",
              "creator_userid": 2,
              "updator_userid": 11,
              "product": {
                "id": 7,
                "product_name": "BizCharts@4.x",
                "identifier": "BizCharts4",
                "is_alinw": 0,
                "is_searchable": 1,
                "is_deleted": 0,
                "gmt_create": "2020-04-07T08:49:30.000Z",
                "gmt_modified": "2020-05-12T06:19:13.000Z",
                "creator_userid": 2,
                "updator_userid": 11,
                "is_avaliable": 1
              }
            }
          ],
          "isPage": true
        },
        {
          "id": 111,
          "category_id": 72,
          "name": "自定义主题",
          "identifier": null,
          "rank": 0,
          "exampleCount": 2,
          "example": [
            {
              "id": 382,
              "name": "theme自定义(bizcharts@4.x)",
              "rank": 0,
              "pages": "111",
              "page_id": 111,
              "product_id": 7,
              "in_gallery": null,
              "description": null,
              "javascript": "import { Chart, Interval,useTheme,registerTheme,getTheme } from 'bizcharts';\n// 注册自己的主题\nregisterTheme('my-theme',{\n  defaultColor:'#6DC8EC',\n  geometries: {\n    interval: {\n      rect: {\n        default: { style: { fill: '#6DC8EC', fillOpacity: 0.95 } },\n        active: { style: { stroke: '#5AD8A6', lineWidth: 1 } },\n        inactive: { style: { fillOpacity: 0.3, strokeOpacity: 0.3 } },\n        selected: {},\n      }}}\n})\n\nconst data = [\n  { year: '1951 年', sales: 38 },\n  { year: '1952 年', sales: 52 },\n  { year: '1956 年', sales: 61 },\n  { year: '1957 年', sales: 45 },\n  { year: '1958 年', sales: 48 },\n  { year: '1959 年', sales: 38 },\n  { year: '1960 年', sales: 38 },\n  { year: '1962 年', sales: 38 },\n];\n\n\nfunction Demo() {\n  const [theme,setTheme] = useTheme('my-theme');\n  // 不清楚主题属性有哪些，可以log出来看一下\n  console.log(getTheme('default'));\n  return <Chart height={400} autoFit data={data} theme={theme} interactions={['element-active']} padding={[30, 30, 30, 50]} >\n    <Interval position=\"year*sales\"  />\n  </Chart>\n}\n\nReactDOM.render(<Demo />, mountNode);\n",
              "css": null,
              "is_deleted": 0,
              "gmt_create": "2020-05-19T12:45:34.000Z",
              "gmt_modified": "2020-08-06T02:24:35.000Z",
              "compiled_js": null,
              "tag": "3",
              "shot": "http://bizcharts-resource.oss-cn-zhangjiakou.aliyuncs.com/images/a8be06c0-99ce-11ea-a269-c754d6f22016.png",
              "creator_userid": 11,
              "updator_userid": 11,
              "product": {
                "id": 7,
                "product_name": "BizCharts@4.x",
                "identifier": "BizCharts4",
                "is_alinw": 0,
                "is_searchable": 1,
                "is_deleted": 0,
                "gmt_create": "2020-04-07T08:49:30.000Z",
                "gmt_modified": "2020-05-12T06:19:13.000Z",
                "creator_userid": 2,
                "updator_userid": 11,
                "is_avaliable": 1
              }
            },
            {
              "id": 470,
              "name": "基础图表全局主题配置",
              "rank": 0,
              "pages": "111",
              "page_id": 111,
              "product_id": 7,
              "in_gallery": 1,
              "description": null,
              "javascript": "\nimport { Chart, Interval, Tooltip, Line, Axis, Coordinate, Point, registerTheme, Legend, getTheme } from 'bizcharts';\n\n// 配置全局主题\n// 详细文档 https://bizcharts.net/product/BizCharts4/category/61/page/111\nregisterTheme('default', {\n  defaultColor: '#505050',\n  // 颜色序列\n  colors10: [\"#83A\", \"#5AD8A6\", \"#5D7092\", \"#F6BD16\", \"#E86452\", \"#6DC8EC\", \"#945FB9\", \"#FF9845\", \"#1E9493\", \"#FF99C3\"],\n  geometries: {\n    interval: {\n      rect: {\n        default: { style: { fill: '#6DC8EC', stroke: 'red', fillOpacity: 0.95 } },\n        active: { style: { stroke: '#5AD8A6', lineWidth: 1 } },\n        inactive: { style: { fillOpacity: 0.3, strokeOpacity: 0.3 } },\n        selected: {},\n      }\n    }\n  }\n})\n\nconst data = [\n  { year: '1951 年', sales: 38 },\n  { year: '1952 年', sales: 52 },\n  { year: '1956 年', sales: 61 },\n  { year: '1957 年', sales: 45 },\n  { year: '1958 年', sales: 48 },\n  { year: '1959 年', sales: 38 },\n  { year: '1960 年', sales: 38 },\n  { year: '1962 年', sales: 38 },\n];\nconst scale = {\n  sales: {\n    min: 0\n  }\n}\n\nconst multiLineData = [\n  {\n    month: \"Jan\",\n    city: \"Tokyo\",\n    temperature: 7\n  },\n  {\n    month: \"Jan\",\n    city: \"London\",\n    temperature: 3.9\n  },\n  {\n    month: \"Feb\",\n    city: \"Tokyo\",\n    temperature: 6.9\n  },\n  {\n    month: \"Feb\",\n    city: \"London\",\n    temperature: 4.2\n  },\n  {\n    month: \"Mar\",\n    city: \"Tokyo\",\n    temperature: 9.5\n  },\n  {\n    month: \"Mar\",\n    city: \"London\",\n    temperature: 5.7\n  },\n  {\n    month: \"Apr\",\n    city: \"Tokyo\",\n    temperature: 14.5\n  },\n  {\n    month: \"Apr\",\n    city: \"London\",\n    temperature: 8.5\n  },\n  {\n    month: \"May\",\n    city: \"Tokyo\",\n    temperature: 18.4\n  },\n  {\n    month: \"May\",\n    city: \"London\",\n    temperature: 11.9\n  },\n  {\n    month: \"Jun\",\n    city: \"Tokyo\",\n    temperature: 21.5\n  },\n  {\n    month: \"Jun\",\n    city: \"London\",\n    temperature: 15.2\n  },\n  {\n    month: \"Jul\",\n    city: \"Tokyo\",\n    temperature: 25.2\n  },\n  {\n    month: \"Jul\",\n    city: \"London\",\n    temperature: 17\n  },\n  {\n    month: \"Aug\",\n    city: \"Tokyo\",\n    temperature: 26.5\n  },\n  {\n    month: \"Aug\",\n    city: \"London\",\n    temperature: 16.6\n  },\n  {\n    month: \"Sep\",\n    city: \"Tokyo\",\n    temperature: 23.3\n  },\n  {\n    month: \"Sep\",\n    city: \"London\",\n    temperature: 14.2\n  },\n  {\n    month: \"Oct\",\n    city: \"Tokyo\",\n    temperature: 18.3\n  },\n  {\n    month: \"Oct\",\n    city: \"London\",\n    temperature: 10.3\n  },\n  {\n    month: \"Nov\",\n    city: \"Tokyo\",\n    temperature: 13.9\n  },\n  {\n    month: \"Nov\",\n    city: \"London\",\n    temperature: 6.6\n  },\n  {\n    month: \"Dec\",\n    city: \"Tokyo\",\n    temperature: 9.6\n  },\n  {\n    month: \"Dec\",\n    city: \"London\",\n    temperature: 4.8\n  }\n];\n\nconst pieData = [\n  { item: '事例一', percent: 0.4 },\n  { item: '事例二', percent: 0.21 },\n  { item: '事例三', percent: 0.17 },\n  { item: '事例四', percent: 0.13 },\n  { item: '事例五', percent: 0.09 },\n];\n\nconst cols = {\n  percent: {\n    formatter: val => {\n      val = val * 100 + '%';\n      return val;\n    },\n  },\n};\n\n// interactions 交互配置 https://bizcharts.net/product/BizCharts4/category/62/page/112#type\n\nfunction Demo() {\n  //不清楚图表主题配置属性有哪些，可以log出来看一下\n  console.log(getTheme('default'));\n\n  return (\n    <div style={{padding:'20px'}}>\n      <h3>柱状图</h3>\n      <Chart height={400} scale={scale} autoFit data={data} interactions={['active-region']} appendPadding={[20, 0, 0, 0]}>\n        <Interval position=\"year*sales\" color=\"year\" />\n        <Tooltip shared />\n      </Chart>\n      <h3>单条折线图</h3>\n      <Chart height={400} scale={scale} autoFit data={data} appendPadding={[20, 0, 0, 0]}>\n        <Line position=\"year*sales\" shape=\"smooth\" />\n        <Point position=\"year*sales\" />\n        <Tooltip showCrosshairs />\n      </Chart>\n      <h3>多条折线图</h3>\n      <Chart scale={{ temperature: { min: 0 } }} padding={[10, 20, 50, 40]} autoFit height={500} data={multiLineData} >\n        <Line shape=\"smooth\" position=\"month*temperature\" color=\"city\" />\n        <Point position=\"month*temperature\" color=\"city\" />\n        <Tooltip shared={true} showCrosshairs />\n        <Legend itemName={{\n          style: {\n            fill: \"#333\"\n          }\n        }} />\n      </Chart>\n      <h3>饼图</h3>\n      <Chart height={400} data={pieData} scale={cols} autoFit interactions={['element-single-selected']}>\n        <Coordinate type=\"theta\" radius={0.75} />\n        <Tooltip showTitle={false} />\n        <Axis visible={false} />\n        <Interval\n          position=\"percent\"\n          adjust=\"stack\"\n          color=\"item\"\n          style={{\n            lineWidth: 1,\n            stroke: '#fff',\n          }}\n          label={['*', {\n            content: (data) => {\n              return `${data.item}: ${data.percent * 100}%`;\n            },\n          }]}\n        />\n      </Chart>\n    </div>\n  )\n}\n\nReactDOM.render(<Demo />, mountNode);",
              "css": null,
              "is_deleted": 0,
              "gmt_create": "2020-07-16T08:39:53.000Z",
              "gmt_modified": "2020-08-06T02:24:35.000Z",
              "compiled_js": null,
              "tag": "2,theme",
              "shot": "http://bizcharts-resource.oss-cn-zhangjiakou.aliyuncs.com/images/cff1a160-d313-11ea-bae4-cff6c1ead1d2.png",
              "creator_userid": 10,
              "updator_userid": 10,
              "product": {
                "id": 7,
                "product_name": "BizCharts@4.x",
                "identifier": "BizCharts4",
                "is_alinw": 0,
                "is_searchable": 1,
                "is_deleted": 0,
                "gmt_create": "2020-04-07T08:49:30.000Z",
                "gmt_modified": "2020-05-12T06:19:13.000Z",
                "creator_userid": 2,
                "updator_userid": 11,
                "is_avaliable": 1
              }
            }
          ],
          "isPage": true
        },
        {
          "id": 114,
          "category_id": 72,
          "name": "绘图属性Style",
          "identifier": null,
          "rank": 0,
          "exampleCount": 4,
          "example": [
            {
              "id": 380,
              "name": "Annotation图形标注demo(BizCharts@4.x)",
              "rank": 0,
              "pages": "114",
              "page_id": 114,
              "product_id": 7,
              "in_gallery": null,
              "description": null,
              "javascript": "import React from 'react';\nimport { DataView } from '@antv/data-set';\nimport {\n  Chart,\n  Line,\n  Tooltip,\n  Legend,\n  View,\n  Axis,\n  Area,\n  Coordinate,\n  Annotation,\n} from 'bizcharts';\n\n\nfunction Labelline () {\n  const data = [\n    { year: 1700, exports: 35, imports: 70 },\n    { year: 1710, exports: 59, imports: 81 },\n    { year: 1720, exports: 76, imports: 96 },\n    { year: 1730, exports: 65, imports: 97 },\n    { year: 1740, exports: 67, imports: 93 },\n    { year: 1750, exports: 79, imports: 90 },\n    { year: 1760, exports: 115, imports: 79 },\n    { year: 1770, exports: 163, imports: 85 },\n    { year: 1780, exports: 185, imports: 93 }\n  ];\n  // 通过 DataSet 计算百分比\n  const dv = new DataView().source(data);\n  dv.transform({\n    type: 'map',\n    callback(row) {\n      row.range = [row.exports, row.imports];\n      return row;\n    }\n  });\n  dv.transform({\n  type: 'fold',\n  fields: ['exports', 'imports'], // 展开字段集\n  key: 'type', // key字段\n  value: 'value' // value字段\n});\n\n\n\n  return (\n    <Chart\n      height={400}\n      data={dv.rows}\n      autoFit\n      scale={{\n        value: { min: 0, max: 200 },\n        range: { min: 0, max: 200 },\n      }}\n    >\n      \n      <Axis name=\"range\" visible={false} />\n     \n      <Tooltip showCrosshairs={false} />\n      <Line\n        position=\"year*value\"\n        color={['type', ['#F5222D', '#FAAD14']]}\n        size={2.5}\n        shape=\"smooth\"\n      />\n      <Area\n        position=\"year*range\"\n        color=\"#ffffff\"\n        tooltip={false}\n        shape=\"smooth\"\n      />\n     <Annotation.DataMarker\n          position={[1753, 87]}\n          autoAdjust={false}\n          text={{\n            content: '1755 年在印度周边建立诸多殖民\\n地与附属国，垄断出口贸易，导致\\n出品总额激增。',\n            style: {\n               textAlign: 'left',\n               fontSize: 13\n            },\n          }}\n          line={{\n            length: 50,\n          }}\n          point={{\n            style: {\n              stroke: '#FF4D4F'\n            },\n          }}\n          direction=\"downward\"\n        />\n        <Annotation.Text\n          top\n          position={[1730, 80]}\n          content='贸易赤字'\n          style={{\n            fontSize: 12,\n            fontWeight: 'normal',\n            fill: 'rgba(0,0,0,0.45)'\n          }}\n        />\n        <Annotation.Text\n          top\n          position={[1765, 110]}\n          content='贸易盈余'\n          style={{\n            fontSize: 12,\n            fontWeight: 'normal',\n            fill: 'rgba(0,0,0,0.45)'\n          }}\n        />\n    </Chart>\n  );\n}\nReactDOM.render(<Labelline />, mountNode);\n",
              "css": null,
              "is_deleted": 0,
              "gmt_create": "2020-05-19T09:12:03.000Z",
              "gmt_modified": "2020-08-06T02:24:35.000Z",
              "compiled_js": null,
              "tag": "16",
              "shot": "http://bizcharts-resource.oss-cn-zhangjiakou.aliyuncs.com/images/963cd3b0-9a63-11ea-b34c-777cccf5a6eb.png",
              "creator_userid": 4,
              "updator_userid": 4,
              "product": {
                "id": 7,
                "product_name": "BizCharts@4.x",
                "identifier": "BizCharts4",
                "is_alinw": 0,
                "is_searchable": 1,
                "is_deleted": 0,
                "gmt_create": "2020-04-07T08:49:30.000Z",
                "gmt_modified": "2020-05-12T06:19:13.000Z",
                "creator_userid": 2,
                "updator_userid": 11,
                "is_avaliable": 1
              }
            },
            {
              "id": 477,
              "name": "geom  style回调",
              "rank": 0,
              "pages": "114",
              "page_id": 114,
              "product_id": 7,
              "in_gallery": 1,
              "description": "BizCharts的原子组件基本上都提供了style属性；\n在Geom中支持object，也支持callback回调函数处理；\n",
              "javascript": "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Chart, Line, Point, Tooltip } from 'bizcharts';\n\n// 数据源\nconst data = [\n  { year: '1991', value: 3, marked: false },\n  { year: '1992', value: 4, marked: true },\n  { year: '1993', value: 3.5, marked: false },\n  { year: '1994', value: 5, marked: false },\n  { year: '1995', value: 4.9, marked: false },\n  { year: '1996', value: 6, marked: true },\n  { year: '1997', value: 7, marked: false },\n  { year: '1998', value: 9, marked: false },\n  { year: '1999', value: 13, marked: false },\n];\n\nfunction Demo() {\n  return <Chart\n    padding={ [10, 20, 50, 40] }\n  autoFit\n  height = { 500}\n  data = { data }\n  scale = {{ value: { min: 0 } }\n}\n  >\n  {/* 参考文档 https://bizcharts.net/product/bizcharts/category/7/page/27#style */ }\n  < Line position = \"year*value\" />\n    {/* <LineChart/>暂不支持引入多个字段 */ }\n    < Point position = \"year*value\"   style = {\n      ['year*value*marked', (year, value, marked) => {\n        console.log('marked', marked)\n        return {\n          fill: marked ? 'red' : 'white'\n        }\n      }]} />\n      <Tooltip showCrosshairs />\n      </Chart>\n}\n\nReactDOM.render(<Demo />, mountNode);\n\n\n",
              "css": null,
              "is_deleted": 0,
              "gmt_create": "2020-07-27T11:30:52.000Z",
              "gmt_modified": "2020-11-04T09:57:21.000Z",
              "compiled_js": null,
              "tag": "2,83",
              "shot": "http://bizcharts-resource.oss-cn-zhangjiakou.aliyuncs.com/images/21c2c120-1e84-11eb-981b-6d6ccc86a0f9.png",
              "creator_userid": 10,
              "updator_userid": 11,
              "product": {
                "id": 7,
                "product_name": "BizCharts@4.x",
                "identifier": "BizCharts4",
                "is_alinw": 0,
                "is_searchable": 1,
                "is_deleted": 0,
                "gmt_create": "2020-04-07T08:49:30.000Z",
                "gmt_modified": "2020-05-12T06:19:13.000Z",
                "creator_userid": 2,
                "updator_userid": 11,
                "is_avaliable": 1
              }
            },
            {
              "id": 480,
              "name": "Annotation.DataMarker Annotation.DataRegion",
              "rank": 0,
              "pages": "114",
              "page_id": 114,
              "product_id": 7,
              "in_gallery": 1,
              "description": null,
              "javascript": "import React, { useState, useEffect } from \"react\";\nimport { Chart, Point, Line, Annotation } from \"bizcharts\";\n\nconst scale = {\n  rate: {\n    nice: true,\n  },\n};\nconst dataMarkerCfg1 = {\n  position: [\"2014-01-03\", 6.763],\n  text: {\n    content: \"受稳健货币政策影响，协定存款利\\n率居高不下,收益率达6.763%\",\n    style: {\n      textAlign: \"left\",\n    },\n  },\n};\n\nconst dataMarkerCfg2 = {\n  position: [\"2013-05-31\", 2.093],\n  text: {\n    content: \"余额宝刚成立时，并未达到目标资产\\n配置，故收益率较低\",\n    style: {\n      textAlign: \"left\",\n    },\n  },\n};\n\nconst dataMarkerCfg3 = {\n  position: [\"2016-09-04\", 2.321],\n  autoAdjust: false,\n  text: {\n    content: \"受积极货币政策的影响，收益率降\\n到历史最低2.321%\",\n    style: {\n      textAlign: \"right\",\n    },\n  },\n  line: {\n    length: 30,\n  },\n};\n// style文档 https://bizcharts.net/product/BizCharts4/category/61/page/114\nconst dataMarkerCfg4 = {\n  position: [\"2016-11-02\", 2.399],\n  autoAdjust: false,\n  // 文本style配置\n  text: {\n    content: \"宏观经济过热，受稳健货币政策影\\n响，余额宝收益率随之上升\",\n    style: {\n      textAlign: \"center\",\n      fill: \"red\",\n    },\n  },\n  // line?: null | { style?: ShapeAttrs; length?: number };\n  //线条style配置\n  line: {\n    length: 180,\n    style: {\n      stroke: \"red\",\n    },\n  },\n};\nconst dataMarkerCfg5 = {\n  position: [\"2017-03-24\", 3.83],\n  text: null,\n  line: {\n    length: 50,\n  },\n};\nconst dataRegionCfg = {\n  start: [\"2016-12-02\", 2.517],\n  end: [\"2017-03-24\", 3.83],\n  text: {\n    content: \"【关键区间】\",\n  },\n  lineLength: 50,\n};\nfunction Demo() {\n  const [data, setData] = useState();\n  useEffect(() => {\n    fetch(\"https://gw.alipayobjects.com/os/antvdemo/assets/data/income.json\")\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        setData(data);\n      });\n  }, []);\n\n  return (\n    <Chart height={400} data={data} autoFit scale={scale}>\n      <Line position=\"time*rate\" />\n\n      <Point\n        position=\"height*weight\"\n        color=\"gender\"\n        shape={[\"gender\", [\"circle\", \"square\"]]}\n        style={{\n          fillOpacity: 0.85,\n        }}\n      />\n      <Annotation.DataMarker {...dataMarkerCfg1} />\n      <Annotation.DataMarker {...dataMarkerCfg2} />\n      <Annotation.DataMarker {...dataMarkerCfg3} />\n      <Annotation.DataMarker {...dataMarkerCfg4} />\n      <Annotation.DataMarker {...dataMarkerCfg5} />\n      <Annotation.DataRegion {...dataRegionCfg} />\n    </Chart>\n  );\n}\n\nReactDOM.render(<Demo />, mountNode);\n",
              "css": null,
              "is_deleted": 0,
              "gmt_create": "2020-07-28T08:16:14.000Z",
              "gmt_modified": "2020-08-06T02:24:35.000Z",
              "compiled_js": null,
              "tag": "2,Annotation",
              "shot": "http://bizcharts-resource.oss-cn-zhangjiakou.aliyuncs.com/images/d89b2520-d31d-11ea-8ec9-2b2b04fb6be5.png",
              "creator_userid": 10,
              "updator_userid": 10,
              "product": {
                "id": 7,
                "product_name": "BizCharts@4.x",
                "identifier": "BizCharts4",
                "is_alinw": 0,
                "is_searchable": 1,
                "is_deleted": 0,
                "gmt_create": "2020-04-07T08:49:30.000Z",
                "gmt_modified": "2020-05-12T06:19:13.000Z",
                "creator_userid": 2,
                "updator_userid": 11,
                "is_avaliable": 1
              }
            },
            {
              "id": 521,
              "name": "渐变色配置示范",
              "rank": 0,
              "pages": "114",
              "page_id": null,
              "product_id": 7,
              "in_gallery": 1,
              "description": null,
              "javascript": "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GComponents } from 'bizcharts';\nconst { Canvas, Path, Group, Circle } = GComponents;\n\n// 线性渐变\nconst createLineGrabient = (angle = 0, colorStops = []) => {\n\treturn `l(${angle}) ${colorStops.map(item => item.join(':')).join(' ')}`\n}\n// 放射状渐变\nconst createRGrabient = (cx = 0, cy, r, colorStops = []) => {\n\treturn `r(${cx}, ${cy}, ${r}) ${colorStops.map(item => item.join(':')).join(' ')}`\n}\n\nconsole.log('Grabient', createLineGrabient(270,[\n\t[0, 'rgba(255, 146, 255, 1)'],\n\t[0.5, 'rgba(100, 268, 255, 1)'],\n\t[1, 'rgba(215, 0, 255, 1)']\n]));\n\nfunction Demo() {\n\treturn <Canvas width={500} height={400}> \n\t\t<Path attrs={{\n\t\t\tpath: [\n\t\t\t\t['M', 10, 10],\n\t\t\t\t['L', 200, 200],\n\t\t\t],\n\t\t\tlineWidth: 3,\n\t\t\tstroke: createLineGrabient(270,[\n\t\t\t\t[0, 'rgba(255, 146, 255, 1)'],\n\t\t\t\t[0.5, 'rgba(100, 268, 255, 1)'],\n\t\t\t\t[1, 'rgba(215, 0, 255, 1)']\n\t\t\t]),\n\t\t}} />\n\t\t<Path attrs={{\n\t\t\tpath: [\n\t\t\t\t['M', 50, 10],\n\t\t\t\t['L', 250, 200],\n\t\t\t],\n\t\t\tlineWidth: 3,\n\t\t\t// 分段渐变色\n\t\t\tstroke: createLineGrabient(270,[\n\t\t\t\t[0, 'rgba(255, 16, 205, 1)'],\n\t\t\t\t[0.5, 'rgba(255, 16, 205, 1)'],\n\t\t\t\t[0.5, 'rgba(100, 268, 255, 1)'],\n\t\t\t\t[1, 'rgba(100, 268, 255, 1)']\n\t\t\t]),\n\t\t}} />\n\n\t\t<Circle attrs={{\n          x: 300,\n          y: 100,\n          r: 50,\n\t\t\t\t\t// 使用渐变色填充，渐变起始圆的圆心坐标为被填充物体的包围盒中心点，半径为(包围盒对角线长度 / 2) 的 1 倍，\n          fill: createRGrabient(0.5, 0.5, 1, [\n\t\t\t\t\t\t[0, 'rgba(255, 16, 205, 1)'],\n\t\t\t\t\t\t[0.5, 'rgba(100, 268, 255, 0.5)'],\n\t\t\t\t\t\t[1, 'rgba(100, 268, 255, 0.1)']\n\t\t\t\t\t]),\n          lineWidth: 4,\n          radius: 8,\n        }} />\n\t</Canvas>\n}\n\n\nReactDOM.render(<Demo />, mountNode);\n\n\n",
              "css": null,
              "is_deleted": 0,
              "gmt_create": "2020-10-21T12:09:04.000Z",
              "gmt_modified": "2020-12-24T09:26:31.000Z",
              "compiled_js": null,
              "tag": "210",
              "shot": "http://bizcharts-resource.oss-cn-zhangjiakou.aliyuncs.com/images/1b878a30-45ca-11eb-9e4f-ad19fd17de14.png",
              "creator_userid": 2,
              "updator_userid": 2,
              "product": {
                "id": 7,
                "product_name": "BizCharts@4.x",
                "identifier": "BizCharts4",
                "is_alinw": 0,
                "is_searchable": 1,
                "is_deleted": 0,
                "gmt_create": "2020-04-07T08:49:30.000Z",
                "gmt_modified": "2020-05-12T06:19:13.000Z",
                "creator_userid": 2,
                "updator_userid": 11,
                "is_avaliable": 1
              }
            }
          ],
          "isPage": true
        },
        {
          "id": 115,
          "category_id": 72,
          "name": "配置动画",
          "identifier": null,
          "rank": 0,
          "exampleCount": 0,
          "example": [],
          "isPage": true
        },
        {
          "id": 151,
          "category_id": 72,
          "name": "使用DataSet",
          "identifier": null,
          "rank": 0,
          "exampleCount": 0,
          "example": [],
          "isPage": true
        },
        {
          "id": 152,
          "category_id": 72,
          "name": "DataSet Api",
          "identifier": null,
          "rank": 0,
          "exampleCount": 0,
          "example": [],
          "isPage": true
        },
        {
          "id": 154,
          "category_id": 72,
          "name": "DataSet Transform",
          "identifier": "数据转换",
          "rank": 0,
          "exampleCount": 0,
          "example": [],
          "isPage": true
        },
        {
          "id": 183,
          "category_id": 72,
          "name": "Label属性及自定义label",
          "identifier": null,
          "rank": 0,
          "exampleCount": 0,
          "example": [],
          "isPage": true
        }
      ]
    }
  ]
}